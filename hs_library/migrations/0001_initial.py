# -*- coding: utf-8 -*-
# Generated by Django 1.11.15 on 2018-08-30 03:42
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import hs_library.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Annotation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chapter', models.CharField(max_length=200, verbose_name='章节')),
                ('page_no', models.IntegerField(verbose_name='页数')),
                ('privacy', models.IntegerField(verbose_name='隐私级别')),
                ('abstract', models.CharField(max_length=2000, verbose_name='摘要')),
                ('content', models.CharField(max_length=5000, verbose_name='正文')),
                ('hasmath', models.BooleanField(verbose_name='')),
                ('time', models.TimeField(verbose_name='时间')),
            ],
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='作者名')),
                ('introduction', models.CharField(default='', max_length=2000, verbose_name='作者简介')),
            ],
            options={
                'verbose_name': '作者',
                'verbose_name_plural': '作者管理',
            },
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isbn10', models.IntegerField(unique=True, verbose_name='isbn10')),
                ('isbn13', models.IntegerField(unique=True, verbose_name='isbn13')),
                ('title', models.CharField(max_length=200, verbose_name='书名')),
                ('origin_title', models.CharField(blank=True, default='', max_length=200, verbose_name='原名')),
                ('alt_title', models.CharField(blank=True, default='', max_length=200, verbose_name='别名')),
                ('subtitle', models.CharField(blank=True, default='', max_length=200, verbose_name='副标题')),
                ('publisher', models.CharField(max_length=200, verbose_name='出版商')),
                ('pubdate', models.DateField(verbose_name='出版日期')),
                ('binding', models.CharField(choices=[('平装', '平装'), ('精装', '精装')], max_length=20, verbose_name='装订')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='价格')),
                ('pages', models.BigIntegerField(verbose_name='页数')),
                ('author_intro', models.CharField(default='', max_length=2000, verbose_name='作者简介')),
                ('summary', models.CharField(default='', max_length=2000, verbose_name='简介')),
                ('catalog', models.CharField(blank=True, default='', max_length=2000, verbose_name='目录')),
                ('ebook_url', models.URLField(blank=True, default='', verbose_name='电子书url')),
                ('ebook_price', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, verbose_name='电子书价格')),
                ('shelf_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='上架时间')),
                ('like', models.BigIntegerField(default=0, verbose_name='点赞数')),
                ('image', models.ImageField(default='uploads/unnamed', max_length=50, upload_to=hs_library.models.book_image_path, verbose_name='封面')),
                ('author', models.ManyToManyField(related_name='book_set', to='hs_library.Author', verbose_name='作者')),
            ],
            options={
                'verbose_name': '上架书籍',
                'verbose_name_plural': '上架书籍管理',
            },
        ),
        migrations.CreateModel(
            name='BookRating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('average', models.DecimalField(decimal_places=1, max_digits=2, verbose_name='总评分')),
                ('max', models.IntegerField(verbose_name='最高分')),
                ('min', models.IntegerField(verbose_name='最低分')),
                ('numRaters', models.BigIntegerField(verbose_name='评分数')),
            ],
        ),
        migrations.CreateModel(
            name='BorrowRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField(default=django.utils.timezone.now, verbose_name='借还日期')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='borrow_record', to='hs_library.Book', verbose_name='单本')),
                ('borrower', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='borrow_record', to=settings.AUTH_USER_MODEL, verbose_name='借阅人')),
            ],
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.CharField(default='暂时没有评论呢，快来添加吧', max_length=200, verbose_name='评论')),
                ('status', models.CharField(choices=[('reading', '在读'), ('read', '读过'), ('wish', '想读')], max_length=10, verbose_name='状态')),
                ('updated', models.DateTimeField(default=django.utils.timezone.now, verbose_name='更新时间')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='collection_set', to='hs_library.Book', verbose_name='藏书')),
                ('collector', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='collection_set', to=settings.AUTH_USER_MODEL, verbose_name='推荐人')),
            ],
            options={
                'verbose_name': '收藏',
                'verbose_name_plural': '收藏管理',
            },
        ),
        migrations.CreateModel(
            name='CommentAnnotation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reply', models.CharField(max_length=200, verbose_name='回复内容')),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='comment_annotation_set', to='hs_library.Annotation', verbose_name='回复')),
                ('respondent', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='comment_annotation_set', to=settings.AUTH_USER_MODEL, verbose_name='回复人')),
            ],
            options={
                'verbose_name': '回复',
                'verbose_name_plural': '回复管理',
            },
        ),
        migrations.CreateModel(
            name='CommentReview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reply', models.CharField(max_length=200, verbose_name='回复内容')),
            ],
            options={
                'verbose_name': '回复',
                'verbose_name_plural': '回复管理',
            },
        ),
        migrations.CreateModel(
            name='FavoriteBookAnnuallyStatistic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('book_annually_likes', models.BigIntegerField(default=0, verbose_name='本年点赞数')),
                ('book_annually_likes_save', models.BigIntegerField(default=0, verbose_name='上年点赞数')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='favorite_book_annually_statistic_set', to='hs_library.Book', verbose_name='书籍')),
            ],
        ),
        migrations.CreateModel(
            name='FavoriteBookMonthlyStatistic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('book_monthly_likes', models.BigIntegerField(default=0, verbose_name='本月点赞数')),
                ('book_monthly_likes_save', models.BigIntegerField(default=0, verbose_name='上月点赞数')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='favorite_book_monthly_statistic_set', to='hs_library.Book', verbose_name='书籍')),
            ],
        ),
        migrations.CreateModel(
            name='FavoriteBookWeeklyStatistic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('book_weekly_likes', models.BigIntegerField(default=0, verbose_name='本周点赞数')),
                ('book_weekly_likes_save', models.BigIntegerField(default=0, verbose_name='上周点赞数')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='favorite_book_weekly_statistic_set', to='hs_library.Book', verbose_name='书籍')),
            ],
        ),
        migrations.CreateModel(
            name='HighRatingBookAnnuallyStatistic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('annually_avg_rating', models.DecimalField(decimal_places=10, max_digits=12, verbose_name='本年评分')),
                ('annually_rating_count', models.BigIntegerField(verbose_name='本年评分数')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='high_rating_book_annually_statistic_set', to='hs_library.Book', verbose_name='书籍')),
            ],
        ),
        migrations.CreateModel(
            name='HighRatingBookMonthlyStatistic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('monthly_avg_rating', models.DecimalField(decimal_places=1, max_digits=2, verbose_name='本月评分')),
                ('monthly_rating_count', models.BigIntegerField(verbose_name='本月评分数')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='high_rating_book_monthly_statistic_set', to='hs_library.Book', verbose_name='书籍')),
            ],
        ),
        migrations.CreateModel(
            name='HighRatingBookWeeklyStatistic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weekly_avg_rating', models.DecimalField(decimal_places=1, max_digits=2, verbose_name='本周评分')),
                ('weekly_rating_count', models.BigIntegerField(verbose_name='本周评分数')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='high_rating_book_weekly_statistic_set', to='hs_library.Book', verbose_name='书籍')),
            ],
        ),
        migrations.CreateModel(
            name='LoaningRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField(default=django.utils.timezone.now, verbose_name='借还日期')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='loaning_record', to='hs_library.Book', verbose_name='单本')),
                ('borrower', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='loaning_record', to=settings.AUTH_USER_MODEL, verbose_name='借阅人')),
            ],
        ),
        migrations.CreateModel(
            name='MetaData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial_number', models.BigIntegerField(unique=True, verbose_name='序列号')),
                ('status', models.IntegerField(choices=[(0, '已借走'), (1, '已申请'), (2, '可借阅'), (3, '超期未归还'), (4, '预留状态')], default=2, verbose_name='借阅状态')),
                ('borrow_date_time', models.DateTimeField(blank=True, null=True, verbose_name='借阅时间')),
                ('should_return_date_time', models.DateTimeField(blank=True, null=True, verbose_name='归还时间')),
                ('applicant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='metadata_applicant_set', to=settings.AUTH_USER_MODEL, verbose_name='申请人')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='metadata_set', to='hs_library.Book', verbose_name='书籍')),
                ('owner', models.ForeignKey(blank=True, default=1, null=True, on_delete=models.SET(hs_library.models.get_sentienl_own), related_name='metadata_owner_set', to=settings.AUTH_USER_MODEL, verbose_name='所有者')),
            ],
            options={
                'verbose_name': '上架单本',
                'verbose_name_plural': '上架单本管理',
            },
        ),
        migrations.CreateModel(
            name='MostCommentedBookAnnuallyStatistic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('annually_comment_count', models.BigIntegerField(verbose_name='本年评论数')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='most_commented_book_annually_statistic_set', to='hs_library.Book', verbose_name='书籍')),
            ],
        ),
        migrations.CreateModel(
            name='MostCommentedBookMonthlyStatistic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('monthly_comment_count', models.BigIntegerField(verbose_name='本月评论数')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='most_commented_book_monthly_statistic_set', to='hs_library.Book', verbose_name='书籍')),
            ],
        ),
        migrations.CreateModel(
            name='MostCommentedBookWeeklyStatistic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weekly_comment_count', models.BigIntegerField(verbose_name='本周评论数')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='most_commented_book_weekly_statistic_set', to='hs_library.Book', verbose_name='书籍')),
            ],
        ),
        migrations.CreateModel(
            name='MostWantBookAnnuallyStatistic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wanna_book_annually_likes', models.BigIntegerField(default=0, verbose_name='本周点赞数')),
                ('wanna_book_annually_likes_save', models.BigIntegerField(default=0, verbose_name='上周点赞数')),
            ],
        ),
        migrations.CreateModel(
            name='MostWantBookMonthlyStatistic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wanna_book_monthly_likes', models.BigIntegerField(default=0, verbose_name='本周点赞数')),
                ('wanna_book_monthly_likes_save', models.BigIntegerField(default=0, verbose_name='上周点赞数')),
            ],
        ),
        migrations.CreateModel(
            name='MostWantBookWeeklyStatistic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wanna_book_weekly_likes', models.BigIntegerField(default=0, verbose_name='本周点赞数')),
                ('wanna_book_weekly_likes_save', models.BigIntegerField(default=0, verbose_name='上周点赞数')),
            ],
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.URLField(blank=True, default='', verbose_name='照片')),
            ],
        ),
        migrations.CreateModel(
            name='PostPoneRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField(default=django.utils.timezone.now, verbose_name='借还日期')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='postpone_record', to='hs_library.Book', verbose_name='单本')),
                ('borrower', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='postpone_record', to=settings.AUTH_USER_MODEL, verbose_name='借阅人')),
            ],
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('max', models.IntegerField(verbose_name='最大分数')),
                ('value', models.IntegerField(verbose_name='平均分数')),
                ('min', models.IntegerField(verbose_name='最小分数')),
            ],
            options={
                'verbose_name': '评分',
                'verbose_name_plural': '评分管理',
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=20, verbose_name='评论标题')),
                ('summary', models.CharField(default='暂时没有评论呢，快来添加吧', max_length=200, verbose_name='评论')),
                ('published', models.DateTimeField(verbose_name='发布时间')),
                ('updated', models.DateTimeField(verbose_name='更新时间')),
                ('votes', models.BigIntegerField(default=0, verbose_name='赞')),
                ('useless', models.BigIntegerField(default=0, verbose_name='踩')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='comment_set', to=settings.AUTH_USER_MODEL, verbose_name='评论人')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='review_set', to='hs_library.Book', verbose_name='书籍')),
                ('rating', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='comment_set', to='hs_library.Rating', verbose_name='评分')),
            ],
            options={
                'verbose_name': '评论',
                'verbose_name_plural': '评论管理',
            },
        ),
        migrations.CreateModel(
            name='Series',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='系列')),
            ],
            options={
                'verbose_name': '系列',
                'verbose_name_plural': '系列管理',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='标签')),
            ],
            options={
                'verbose_name': '标签',
                'verbose_name_plural': '标签管理',
            },
        ),
        migrations.CreateModel(
            name='Translator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='译者名')),
                ('introduction', models.CharField(default='', max_length=200, verbose_name='译者简介')),
            ],
            options={
                'verbose_name': '译者',
                'verbose_name_plural': '译者管理',
            },
        ),
        migrations.CreateModel(
            name='WannaBook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='书名')),
                ('author', models.CharField(max_length=50, verbose_name='作者')),
                ('describe', models.CharField(max_length=200, verbose_name='描述')),
                ('likes', models.BigIntegerField(verbose_name='点赞数')),
                ('recommender', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='wannabook_set', to=settings.AUTH_USER_MODEL, verbose_name='推荐人')),
            ],
            options={
                'verbose_name': '想看书籍',
                'verbose_name_plural': '想看书籍管理',
            },
        ),
        migrations.AddField(
            model_name='mostwantbookweeklystatistic',
            name='wanna_book',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='most_want_book_weekly_statistic_set', to='hs_library.WannaBook', verbose_name='书籍'),
        ),
        migrations.AddField(
            model_name='mostwantbookmonthlystatistic',
            name='wanna_book',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='most_want_book_monthly_statistic_set', to='hs_library.WannaBook', verbose_name='书籍'),
        ),
        migrations.AddField(
            model_name='mostwantbookannuallystatistic',
            name='wanna_book',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='most_want_book_annuallystatistic_set', to='hs_library.WannaBook', verbose_name='书籍'),
        ),
        migrations.AddField(
            model_name='loaningrecord',
            name='comment',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hs_library.Review', verbose_name='评论'),
        ),
        migrations.AddField(
            model_name='commentreview',
            name='comment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='comment_review_set', to='hs_library.Review', verbose_name='回复'),
        ),
        migrations.AddField(
            model_name='commentreview',
            name='respondent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='comment_review_set', to=settings.AUTH_USER_MODEL, verbose_name='回复人'),
        ),
        migrations.AddField(
            model_name='collection',
            name='rating',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='collection_set', to='hs_library.Rating', verbose_name='评分'),
        ),
        migrations.AddField(
            model_name='collection',
            name='tags',
            field=models.ManyToManyField(related_name='collection_set', to='hs_library.Tag', verbose_name='标签'),
        ),
        migrations.AddField(
            model_name='book',
            name='rating',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='book', to='hs_library.BookRating', verbose_name='总评分'),
        ),
        migrations.AddField(
            model_name='book',
            name='series',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='book_set', to='hs_library.Series', verbose_name='系列'),
        ),
        migrations.AddField(
            model_name='book',
            name='tags',
            field=models.ManyToManyField(related_name='book_set', to='hs_library.Tag', verbose_name='标签'),
        ),
        migrations.AddField(
            model_name='book',
            name='translator',
            field=models.ManyToManyField(blank=True, related_name='book_set', to='hs_library.Translator', verbose_name='译者'),
        ),
        migrations.AddField(
            model_name='annotation',
            name='abstract_photo',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, related_name='annotation_abstract_photo_set', to='hs_library.Photo', verbose_name='摘要图片'),
        ),
        migrations.AddField(
            model_name='annotation',
            name='author_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='annotation_set', to=settings.AUTH_USER_MODEL, verbose_name='用户'),
        ),
        migrations.AddField(
            model_name='annotation',
            name='book',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='annotation_set', to='hs_library.Book', verbose_name='书本'),
        ),
        migrations.AddField(
            model_name='annotation',
            name='photos',
            field=models.ManyToManyField(blank=True, related_name='annotation_photos_set', to='hs_library.Photo', verbose_name='图片'),
        ),
    ]
